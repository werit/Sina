# run with docker-compose --env-file .\.env -f .\docker-compose-db.yaml -p sina up -d
version: "3.7"
services:
  postgre:
    image: "postgres:12.6-alpine"
    ports:
      - "5434:5432"
    restart: always
    environment:
      POSTGRES_USER: "${DBUSER}"
      POSTGRES_PASSWORD: "${DBPASS}"
      POSTGRES_DB: "${DBSCHEMA}"
    volumes:
      - postgre_recipe_vol:/var/lib/postgresql/data
  postgre_schedule:
    image: "postgres:12.6-alpine"
    ports:
      - "5435:5432"
    restart: always
    environment:
      POSTGRES_USER: "${DBUSER}"
      POSTGRES_PASSWORD: "${DBPASS}"
      POSTGRES_DB: "${DBSCHEMA}"
    volumes:
      - postgre_schedule_vol:/var/lib/postgresql/data
  zookeeper:
    image: "confluentinc/cp-zookeeper:7.0.1"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
        
  kafka:
    image: "confluentinc/cp-kafka:7.0.1"
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - zookeeper
      - kafka
      
  recipe:
    image: "recipes_ms:0.0.1"
    ports:
      - "8008:80"
    restart: always
    environment:
      - CUSTOMCONNSTR_RecipesConnection=${RECIPE_CONNECTION}
    depends_on:
      - postgre
volumes:
  postgre_schedule_vol:
  postgre_recipe_vol:
  