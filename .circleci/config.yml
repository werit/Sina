# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
      - image: amd64/postgres:12.2-alpine
        environment:
          POSTGRES_USER: mmadmin
          POSTGRES_PASSWORD: mmkoko
          POSTGRES_DB: recipedb
      - image: amd64/postgres:12.2-alpine
        name: pg_planning
        environment:
          POSTGRES_USER: mmadmin
          POSTGRES_PASSWORD: mmkoko
          POSTGRES_DB: planningdb

    resource_class: medium
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: Restore
          command: dotnet restore
      # Then simply use the dotnet container as you'd expect and run your tests
      - run:
          # Update this line with the directory that contains your tests project file
          working_directory: ~/project/
          name: Run tests
          command: |
            ASPNETCORE_ENVIRONMENT=CircleCi dotnet test -- xunit.parallelizeAssembly=true
  
  
  
  docker-build:
    docker:
      - image: cimg/base:2021.12
    steps:
      - checkout
      # Whatever you want to do
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true

      - run:
          working_directory: ~/project/recipies_ms/
          name: Docker build Sina recipe
          command: |
            echo $DOCKER_PWD | docker login -u $DOCKER_USER --password-stdin 
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t $DOCKER_USER/sina-recipe:$TAG -f Dockerfile .
            docker push $DOCKER_USER/sina-recipe:$TAG

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
      - build-and-test
      - docker-build:
          context: docker-context
          filters:
            branches:
              only: dev
